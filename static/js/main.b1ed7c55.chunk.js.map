{"version":3,"sources":["components/GalleryImage.tsx","components/Gallery.tsx","components/NavGrid.tsx","lib/index.ts","components/Search.tsx","state/index.ts","App.tsx","index.tsx"],"names":["setOpacity","loaded","opacity","GalleryImage","_ref","imageURI","breed","_useState","useState","_useState2","Object","slicedToArray","setLoaded","react_default","a","createElement","key","className","role","aria-label","style","objectSpread","transition","onLoad","_e","alt","getOrElse","src","onNone","onSome","s","fold","msg","images","map","Gallery","onLoading","query","handleSelect","selectedBreed","breeds","filteredBreeds","arguments","length","undefined","filter","b","str","RegExp","escapeRegExp","test","slice","selected","type","onClick","aria-pressed","id","NavGrid","Search","onQueryChange","value","onChange","initialState","none","reducer","state","action","payload","App","useEffect","fetch","then","res","json","message","some","right","keys","left","catch","_","dispatch","setBreeds","_useReducer","useReducer","_useReducer2","_useReducer2$","Search_Search","e","target","NavGrid_NavGrid","setSelectedBreed","concat","_ref2","Array","isArray","fetchImages","setImages","Gallery_Gallery","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"gTAQMA,EAAa,SAACC,GAAD,MAAsB,CACvCC,QAASD,EAAS,EAAI,IAGT,SAASE,EAATC,GAA8D,IAAtCC,EAAsCD,EAAtCC,SAAUC,EAA4BF,EAA5BE,MAA4BC,EAC/CC,oBAAS,GADsCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACpEN,EADoEQ,EAAA,GAC5DG,EAD4DH,EAAA,GAE3E,OACEI,EAAAC,EAAAC,cAAA,UAAQC,IAAKX,IACTJ,GACAY,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,QAAMG,KAAK,MAAMC,aAAW,WAA5B,iBAKJN,EAAAC,EAAAC,cAAA,OACEK,MAAKV,OAAAW,EAAA,EAAAX,CAAA,GACAV,EAAWC,GADX,CAEHqB,WAAY,UAEdC,OAAQ,SAAAC,GAAE,OAAIZ,GAAU,IACxBa,IAAKnB,EAAMoB,UAAU,IACrBC,IAAKtB,eCnBPuB,EAAS,KAETC,EAAS,SAACvB,GAAD,OAA0B,SACvCwB,GADuC,OAGvCA,EAAEC,KACA,SAAAC,GAAG,OAAInB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAASe,IAC9B,SAAAC,GAAM,OACJpB,EAAAC,EAAAC,cAAA,UACGkB,EAAOC,IAAI,SAAA7B,GAAQ,OAClBQ,EAAAC,EAAAC,cAAA,MAAIC,IAAKX,GACPQ,EAAAC,EAAAC,cAACZ,EAAD,CAAcE,SAAUA,EAAUC,MAAOA,YAOtC,SAAS6B,EAAT/B,GAAkD,IAA/B6B,EAA+B7B,EAA/B6B,OAAQ3B,EAAuBF,EAAvBE,MACxC,OACEO,EAAAC,EAAAC,cAAA,WAASE,UAAU,qBAChBgB,EAAOF,KAAKH,EAAQC,EAAOvB,0BCX5B8B,SAAYvB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,WAAd,eAEZY,EAAS,SACbQ,EACAC,EACAC,GAHa,OAIV,SAACT,GAAD,OACHA,EAAEC,KACA,SAAAC,GAAG,OAAInB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAASe,IAC9B,SAACQ,GAAD,IAASC,EAATC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA0BF,EAAOK,OAAO,SAAAC,GAAC,OC5BpBC,ED4BiCV,EC3BxD,IAAIW,OAAOC,IAAaF,GAAM,OD2BiCG,KAAKJ,GC5B9C,IAACC,ID4BrB,OACEN,EAAeE,OACb9B,EAAAC,EAAAC,cAAA,UACG0B,EAAeU,MAAM,EAAG,IAAIjB,IAAI,SAAC5B,GAChC,IAAM8C,EAAW9C,IAAUiC,EAAcb,UAAU,IACnD,OACEb,EAAAC,EAAAC,cAAA,MAAIC,IAAKV,GACPO,EAAAC,EAAAC,cAAA,UACEsC,KAAK,SACLC,QAAShB,EAAahC,GACtBiD,eAAcH,EACdnC,UAAWmC,EAAW,SAAW,GACjCI,GAAIlD,GAEHA,OAOXO,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YAAd,+BAIO,SAASwC,EAATrD,GAKE,IAJfoC,EAIepC,EAJfoC,OACAH,EAGejC,EAHfiC,MACAC,EAEelC,EAFfkC,aACAC,EACenC,EADfmC,cAEA,OACE1B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACZuB,EAAOT,KAAKK,EAAWP,EAAOQ,EAAOC,EAAcC,WEtD3C,SAASmB,EAATtD,GAAuD,IAArCiC,EAAqCjC,EAArCiC,MAAOsB,EAA8BvD,EAA9BuD,cACtC,OACE9C,EAAAC,EAAAC,cAAA,QAAME,UAAU,oBACdJ,EAAAC,EAAAC,cAAA,SACEI,aAAW,SACXyC,MAAOvB,EACPwB,SAAUF,EACV1C,UAAU,eACVoC,KAAK,SAEW,IAAjBhB,EAAMM,QACL9B,EAAAC,EAAAC,cAAA,QAAME,UAAU,sBACdJ,EAAAC,EAAAC,cAAA,QAAMG,KAAK,MAAMC,aAAW,aAA5B,wCAEQ,IAHV,6BCoFK2C,EAAyB,CACpCtB,OAAQuB,OACR9B,OAAQ8B,OACR1B,MAAO,GACPE,cAAewB,QAGJC,EAAwC,WAGhD,IAFHC,EAEGvB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFKoB,EACRI,EACGxB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACH,OAAQsB,EAAOb,MACb,IA5GsB,aA6GpB,OAAO3C,OAAAW,EAAA,EAAAX,CAAA,GAAKuD,EAAZ,CAAmBzB,OAAQ0B,EAAOC,UACpC,IAjHqB,YAkHnB,OAAOzD,OAAAW,EAAA,EAAAX,CAAA,GAAKuD,EAAZ,CAAmB5B,MAAO6B,EAAOC,UACnC,IApH8B,qBAqH5B,OAAOzD,OAAAW,EAAA,EAAAX,CAAA,GAAKuD,EAAZ,CAAmB1B,cAAe2B,EAAOC,UAC3C,IAjHsB,aAkHpB,OAAOzD,OAAAW,EAAA,EAAAX,CAAA,GAAKuD,EAAZ,CAAmBhC,OAAQiC,EAAOC,UACpC,QACE,OAAOF,IC7DEG,EAxCgB,WAC7BC,oBAAU,WD+BVC,MAAM,uCACHC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAnE,GAAA,IAAGsE,EAAHtE,EAAGsE,QAAH,MACe,kBAAZA,EACHC,eAAKC,gBAAMlE,OAAOmE,KAAKH,KACvBC,eAAKG,eAAK,kCAEfC,MAAM,SAAAC,GAAC,OAAIL,eAAKG,eAAK,4BCrCRP,KAAK,SAAC/B,GAAD,OAAiByC,EDuCf,SAACzC,GAAD,MAA6C,CACpEa,KA1DwB,aA2DxBc,QAAS3B,GCzCsC0C,CAAU1C,OACtD,IAHgC,IAAA2C,EAK0BC,qBAC3DpB,EACAF,GAPiCuB,EAAA3E,OAAAC,EAAA,EAAAD,CAAAyE,EAAA,GAAAG,EAAAD,EAAA,GAK1B7C,EAL0B8C,EAK1B9C,OAAQP,EALkBqD,EAKlBrD,OAAQI,EALUiD,EAKVjD,MAAOE,EALG+C,EAKH/C,cAAiB0C,EALdI,EAAA,GAmBnC,OACExE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,aAChBJ,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACwE,EAAD,CAAQlD,MAAOA,EAAOsB,cAd8B,SAAA6B,GAC1DP,EDmCuD,CACzD5B,KAlEuB,YAmEvBc,QCrCoBqB,EAAEC,OAAO7B,aAgBzB/C,EAAAC,EAAAC,cAAA,QAAME,UAAU,aACdJ,EAAAC,EAAAC,cAAC2E,EAAD,CACEnD,cAAeA,EACfC,OAAQA,EACRH,MAAOA,EACPC,aAlBkB,SAAChC,GAAD,OAAqC,SAAAkB,GAC7DyD,EDoC4B,SAC9B3E,GAD8B,MAEF,CAC5B+C,KA1EgC,qBA2EhCc,QAAS7D,GCxCEqF,CAAiBhB,eAAKrE,KDgDR,SAACA,GAAD,OACzBgE,MAAK,6BAAAsB,OAA8BtF,EAA9B,YACFiE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAsB,GAAA,IAAGnB,EAAHmB,EAAGnB,QAAH,OACJoB,MAAMC,QAAQrB,GACVC,eAAKC,gBAAMF,IACXC,eAAKG,eAAK,8BAEfC,MAAM,SAAAC,GAAC,OAAIL,eAAKG,eAAK,4BCvDtBkB,CAAY1F,GAAOiE,KAAK,SAACtC,GAAD,OAAiBgD,ED0CpB,SAAChD,GAAD,MAA6C,CACpEoB,KA1EwB,aA2ExBc,QAASlC,GC5C2CgE,CAAUhE,UAkBxDpB,EAAAC,EAAAC,cAACmF,EAAD,CAAS5F,MAAOiC,EAAeN,OAAQA,OCrD/CkE,IAASC,OAAOvF,EAAAC,EAAAC,cAACsF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.b1ed7c55.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { ImageURI, SelectedBreed } from \"../state\";\n\nexport interface GalleryImageProps {\n  imageURI: ImageURI;\n  breed: SelectedBreed;\n}\n\nconst setOpacity = (loaded: boolean) => ({\n  opacity: loaded ? 1 : 0\n});\n\nexport default function GalleryImage({ imageURI, breed }: GalleryImageProps) {\n  const [loaded, setLoaded] = useState(false);\n  return (\n    <figure key={imageURI}>\n      {!loaded && (\n        <div className=\"loading\">\n          <span role=\"img\" aria-label=\"loading\">\n            üê∂\n          </span>\n        </div>\n      )}\n      <img\n        style={{\n          ...setOpacity(loaded),\n          transition: \"800ms\"\n        }}\n        onLoad={_e => setLoaded(true)}\n        alt={breed.getOrElse(\"\")}\n        src={imageURI}\n      ></img>\n    </figure>\n  );\n}\n","import React from \"react\";\nimport { FetchedImages, ImageURI, ErrorMsg, SelectedBreed } from \"../state\";\nimport { Either } from \"fp-ts/lib/Either\";\nimport GalleryImage from \"./GalleryImage\";\nimport \"./Gallery.scss\";\n\nexport interface GalleryProps {\n  images: FetchedImages;\n  breed: SelectedBreed;\n}\n\nconst onNone = null;\n\nconst onSome = (breed: SelectedBreed) => (\n  s: Either<ErrorMsg, Array<ImageURI>>\n) =>\n  s.fold(\n    msg => <h3 className=\"error\">{msg}</h3>,\n    images => (\n      <ul>\n        {images.map(imageURI => (\n          <li key={imageURI}>\n            <GalleryImage imageURI={imageURI} breed={breed} />\n          </li>\n        ))}\n      </ul>\n    )\n  );\n\nexport default function Gallery({ images, breed }: GalleryProps) {\n  return (\n    <section className=\"gallery-container\">\n      {images.fold(onNone, onSome(breed))}\n    </section>\n  );\n}\n","import React, { MouseEventHandler } from \"react\";\nimport {\n  FetchedBreeds,\n  Query,\n  Breed,\n  ErrorMsg,\n  SelectedBreed\n} from \"./../state\";\nimport { Either } from \"fp-ts/lib/Either\";\nimport { toRegExp } from \"../lib\";\nimport \"./NavGrid.scss\";\n\ntype HandleBreedSelect = (breed: Breed) => MouseEventHandler;\n\nexport interface NavGridProps {\n  breeds: FetchedBreeds;\n  query: Query;\n  handleSelect: HandleBreedSelect;\n  selectedBreed: SelectedBreed;\n}\n\nconst onLoading = <h2 className=\"loading\">Loading...</h2>;\n\nconst onSome = (\n  query: Query,\n  handleSelect: HandleBreedSelect,\n  selectedBreed: SelectedBreed\n) => (s: Either<ErrorMsg, Array<Breed>>) =>\n  s.fold(\n    msg => <h3 className=\"error\">{msg}</h3>,\n    (breeds, filteredBreeds = breeds.filter(b => toRegExp(query).test(b))) =>\n      filteredBreeds.length ? (\n        <ul>\n          {filteredBreeds.slice(0, 12).map((breed: Breed) => {\n            const selected = breed === selectedBreed.getOrElse(\"\");\n            return (\n              <li key={breed}>\n                <button\n                  type=\"button\"\n                  onClick={handleSelect(breed)}\n                  aria-pressed={selected}\n                  className={selected ? \"active\" : \"\"}\n                  id={breed}\n                >\n                  {breed}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <h2 className=\"no-match\">No breed matches found.</h2>\n      )\n  );\n\nexport default function NavGrid({\n  breeds,\n  query,\n  handleSelect,\n  selectedBreed\n}: NavGridProps) {\n  return (\n    <nav className=\"nav-container\">\n      {breeds.fold(onLoading, onSome(query, handleSelect, selectedBreed))}\n    </nav>\n  );\n}\n","import escapeRegExp from \"lodash/escapeRegExp\";\n\nexport const toRegExp = (str: string): RegExp =>\n  new RegExp(escapeRegExp(str), \"gi\");\n","import React, { ChangeEventHandler } from \"react\";\nimport { Query } from \"../state\";\nimport \"./Search.scss\";\n\nexport interface SearchProps {\n  query: Query;\n  onQueryChange: ChangeEventHandler;\n}\n\nexport default function Search({ query, onQueryChange }: SearchProps) {\n  return (\n    <span className=\"search-container\">\n      <input\n        aria-label=\"search\"\n        value={query}\n        onChange={onQueryChange}\n        className=\"search-input\"\n        type=\"text\"\n      />\n      {query.length === 0 && (\n        <span className=\"search-placeholder\">\n          <span role=\"img\" aria-label=\"detective\">\n            üïµÔ∏è‚Äç‚ôÄÔ∏è\n          </span>{\" \"}\n          Search\n        </span>\n      )}\n    </span>\n  );\n}\n","import { Reducer } from \"react\";\nimport { Either, right, left } from \"fp-ts/lib/Either\";\nimport { Option, none, some } from \"fp-ts/lib/Option\";\n\nexport const SET_SELECTED_BREED = \"SET_SELECTED_BREED\";\nexport const SET_QUERY = \"SET_QUERY\";\nexport const FETCH_BREEDS = \"FETCH_BREEDS\";\nexport const FETCH_IMAGES = \"FETCH_IMAGES\";\nexport const SET_BREEDS = \"SET_BREEDS\";\nexport const SET_IMAGES = \"SET_IMAGES\";\n\nexport type Breed = string;\nexport type ImageURI = string;\nexport type Query = string;\nexport type ErrorMsg = string;\n\nexport type FetchedBreeds = Option<Either<ErrorMsg, Array<Breed>>>;\nexport type FetchedImages = Option<Either<ErrorMsg, Array<ImageURI>>>;\nexport type SelectedBreed = Option<Breed>;\n\ninterface SetSelectedBreedAction {\n  type: typeof SET_SELECTED_BREED;\n  payload: SelectedBreed;\n}\n\ninterface SetBreedsAction {\n  type: typeof SET_BREEDS;\n  payload: FetchedBreeds;\n}\n\ninterface SetImagesAction {\n  type: typeof SET_IMAGES;\n  payload: FetchedImages;\n}\n\ninterface SetQueryAction {\n  type: typeof SET_QUERY;\n  payload: Query;\n}\n\ninterface FetchBreedsAction {\n  type: typeof FETCH_BREEDS;\n}\n\ninterface FetchImagesAction {\n  type: typeof FETCH_IMAGES;\n  payload: Breed;\n}\n\ntype AppAction =\n  | SetBreedsAction\n  | SetQueryAction\n  | SetSelectedBreedAction\n  | SetImagesAction;\n\nexport const fetchBreeds = () =>\n  fetch(\"https://dog.ceo/api/breeds/list/all\")\n    .then(res => res.json())\n    .then(({ message }) =>\n      typeof message === \"object\"\n        ? some(right(Object.keys(message)))\n        : some(left(\"Failed to fetch dog breeds!\"))\n    )\n    .catch(_ => some(left(\"Something went wrong!\")));\n\nexport const setBreeds = (breeds: FetchedBreeds): SetBreedsAction => ({\n  type: SET_BREEDS,\n  payload: breeds\n});\n\nexport const setQuery = (query: Query): SetQueryAction => ({\n  type: SET_QUERY,\n  payload: query\n});\n\nexport const setSelectedBreed = (\n  breed: SelectedBreed\n): SetSelectedBreedAction => ({\n  type: SET_SELECTED_BREED,\n  payload: breed\n});\n\nexport const setImages = (images: FetchedImages): SetImagesAction => ({\n  type: SET_IMAGES,\n  payload: images\n});\n\nexport const fetchImages = (breed: Breed) =>\n  fetch(`https://dog.ceo/api/breed/${breed}/images`)\n    .then(res => res.json())\n    .then(({ message }) =>\n      Array.isArray(message)\n        ? some(right(message))\n        : some(left(\"Failed to fetch images!\"))\n    )\n    .catch(_ => some(left(\"Something went wrong!\")));\n\nexport interface AppState {\n  breeds: FetchedBreeds;\n  images: FetchedImages;\n  query: Query;\n  selectedBreed: SelectedBreed;\n}\n\nexport const initialState: AppState = {\n  breeds: none,\n  images: none,\n  query: \"\",\n  selectedBreed: none\n};\n\nexport const reducer: Reducer<AppState, AppAction> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case SET_BREEDS:\n      return { ...state, breeds: action.payload };\n    case SET_QUERY:\n      return { ...state, query: action.payload };\n    case SET_SELECTED_BREED:\n      return { ...state, selectedBreed: action.payload };\n    case SET_IMAGES:\n      return { ...state, images: action.payload };\n    default:\n      return state;\n  }\n};\n","import React, {\n  FunctionComponent,\n  useEffect,\n  useReducer,\n  ChangeEventHandler,\n  MouseEventHandler\n} from \"react\";\nimport \"./App.scss\";\nimport Gallery from \"./components/Gallery\";\nimport NavGrid from \"./components/NavGrid\";\nimport Search from \"./components/Search\";\nimport {\n  fetchBreeds,\n  reducer,\n  initialState,\n  setBreeds,\n  setQuery,\n  fetchImages,\n  Breed,\n  setSelectedBreed,\n  setImages\n} from \"./state\";\nimport { some } from \"fp-ts/lib/Option\";\n\nconst App: FunctionComponent = () => {\n  useEffect(() => {\n    fetchBreeds().then((breeds: any) => dispatch(setBreeds(breeds)));\n  }, []);\n\n  const [{ breeds, images, query, selectedBreed }, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n\n  const onQueryChange: ChangeEventHandler<HTMLInputElement> = e => {\n    dispatch(setQuery(e.target.value));\n  };\n\n  const handleSelectBreed = (breed: Breed): MouseEventHandler => _e => {\n    dispatch(setSelectedBreed(some(breed)));\n    fetchImages(breed).then((images: any) => dispatch(setImages(images)));\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"header-wrapper\">\n        <header className=\"container\">\n          <h1>Dogs!</h1>\n          <Search query={query} onQueryChange={onQueryChange} />\n        </header>\n      </div>\n      <main className=\"container\">\n        <NavGrid\n          selectedBreed={selectedBreed}\n          breeds={breeds}\n          query={query}\n          handleSelect={handleSelectBreed}\n        />\n        <Gallery breed={selectedBreed} images={images} />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}