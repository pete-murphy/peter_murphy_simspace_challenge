{"version":3,"sources":["state/index.ts","components/GalleryImage.tsx","components/Gallery.tsx","components/NavGrid.tsx","lib/index.ts","components/Search.tsx","App.tsx","index.tsx"],"names":["setQuery","query","type","payload","initialState","breeds","none","images","selectedBreed","reducer","state","arguments","length","undefined","action","Object","objectSpread","map","e","compose","sortBy","_ref3","favorited","img","imageURI","setOpacity","loaded","opacity","GalleryImage","_ref","breed","_useState","useState","_useState2","slicedToArray","setLoaded","react_default","a","createElement","key","style","boxShadow","className","role","aria-label","transition","onLoad","_e","alt","src","onNone","onSome","s","fold","msg","dispatch","useContext","AppContext","onClick","Gallery","onLoading","_useContext","filteredBreeds","filter","b","str","RegExp","escapeRegExp","test","handleSelect","setSelectedBreed","some","fetch","concat","then","res","json","_ref2","message","Array","isArray","right","left","catch","_","fetchImages","setImages","slice","selected","getOrElse","aria-pressed","id","NavGrid","Search","value","onChange","target","createContext","App","useEffect","keys","setBreeds","_useReducer","useReducer","_useReducer2","Provider","Search_Search","NavGrid_NavGrid","Gallery_Gallery","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.098f8880.chunk.js","sourcesContent":["import { Reducer } from \"react\";\nimport { Either, right, left } from \"fp-ts/lib/Either\";\nimport { Option, none, some } from \"fp-ts/lib/Option\";\nimport map from \"lodash/fp/map\"\nimport compose from \"lodash/fp/compose\"\nimport sortBy from \"lodash/fp/sortBy\"\n\nexport const SET_SELECTED_BREED = \"SET_SELECTED_BREED\";\nexport const SET_QUERY = \"SET_QUERY\";\nexport const FETCH_BREEDS = \"FETCH_BREEDS\";\nexport const FETCH_IMAGES = \"FETCH_IMAGES\";\nexport const SET_BREEDS = \"SET_BREEDS\";\nexport const SET_IMAGES = \"SET_IMAGES\";\nexport const ADD_FAVORITE = \"ADD_FAVORITE\";\n\nexport type Breed = string;\nexport type ImageURI = string;\nexport type Query = string;\nexport type ErrorMsg = string;\n\nexport type FetchedBreeds = Option<Either<ErrorMsg, Array<Breed>>>;\nexport type FetchedImages = Option<Either<ErrorMsg, Array<Image>>>;\nexport type SelectedBreed = Option<Breed>;\nexport interface Image {\n  imageURI: ImageURI;\n  breed: Breed;\n  favorited: boolean;\n}\n\ninterface SetSelectedBreedAction {\n  type: typeof SET_SELECTED_BREED;\n  payload: SelectedBreed;\n}\n\ninterface SetBreedsAction {\n  type: typeof SET_BREEDS;\n  payload: FetchedBreeds;\n}\n\ninterface SetImagesAction {\n  type: typeof SET_IMAGES;\n  payload: FetchedImages;\n}\n\ninterface SetQueryAction {\n  type: typeof SET_QUERY;\n  payload: Query;\n}\n\ninterface AddFavoriteAction {\n  type: typeof ADD_FAVORITE;\n  payload: ImageURI;\n}\n\nexport type AppAction =\n  | SetBreedsAction\n  | SetQueryAction\n  | SetSelectedBreedAction\n  | SetImagesAction\n  | AddFavoriteAction;\n\nexport const fetchBreeds = () =>\n  fetch(\"https://dog.ceo/api/breeds/list/all\")\n    .then(res => res.json())\n    .then(({ message }) =>\n      typeof message === \"object\"\n        ? some(right(Object.keys(message)))\n        : some(left(\"Failed to fetch dog breeds!\"))\n    )\n    .catch(_ => some(left(\"Something went wrong!\"))) as Promise<FetchedBreeds>;\n\nexport const setBreeds = (breeds: FetchedBreeds): SetBreedsAction => ({\n  type: SET_BREEDS,\n  payload: breeds\n});\n\nexport const setQuery = (query: Query): SetQueryAction => ({\n  type: SET_QUERY,\n  payload: query\n});\n\nexport const setSelectedBreed = (\n  breed: SelectedBreed\n): SetSelectedBreedAction => ({\n  type: SET_SELECTED_BREED,\n  payload: breed\n});\n\nexport const setImages = (images: FetchedImages): SetImagesAction => ({\n  type: SET_IMAGES,\n  payload: images\n});\n\nexport const fetchImages = (breed: Breed) =>\n  fetch(`https://dog.ceo/api/breed/${breed}/images`)\n    .then(res => res.json())\n    .then(({ message }) =>\n      Array.isArray(message)\n        ? some(right(message.map(imageURI => ({\n          breed,\n          favorited: false,\n          imageURI\n        }))))\n        : some(left(\"Failed to fetch images!\"))\n    )\n    .catch(_ => some(\n      left(\"Something went wrong!\"))) as Promise<FetchedImages>;\n\nexport interface AppState {\n  breeds: FetchedBreeds;\n  images: FetchedImages;\n  query: Query;\n  selectedBreed: SelectedBreed;\n}\n\nexport const initialState: AppState = {\n  breeds: none,\n  images: none,\n  query: \"\",\n  selectedBreed: none\n};\n\nexport const reducer: Reducer<AppState, AppAction> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case SET_BREEDS:\n      return { ...state, breeds: action.payload };\n    case SET_QUERY:\n      return { ...state, query: action.payload };\n    case SET_SELECTED_BREED:\n      return { ...state, selectedBreed: action.payload };\n    case SET_IMAGES:\n      return { ...state, images: action.payload };\n    case ADD_FAVORITE:\n      return {\n        ...state,\n        images: state.images.map(\n          e => e.map(\n            compose(\n              sortBy(({ favorited }) => !favorited),\n              map(img =>\n                img.imageURI === action.payload\n                  ? { ...img, favorited: !img.favorited }\n                  : img\n              )\n            )\n          )\n        )\n      }\n    default:\n      return state;\n  }\n};\n","import React, { useState } from \"react\";\nimport { Image } from \"../state\";\n\nconst setOpacity = (loaded: boolean) => ({\n  opacity: loaded ? 1 : 0\n});\n\nexport default function GalleryImage({ imageURI, breed, favorited }: Image) {\n  const [loaded, setLoaded] = useState(false);\n  return (\n    <figure key={imageURI}\n      style={{\n        boxShadow: favorited ? \"0 0 0 5px var(--red)\" : \"none\"\n      }}>\n      {!loaded && (\n        <div className=\"loading\">\n          <span role=\"img\" aria-label=\"loading\">\n            🐶\n          </span>\n        </div>\n      )}\n      <img\n        style={{\n          ...setOpacity(loaded),\n          transition: \"800ms\"\n        }}\n        onLoad={_e => setLoaded(true)}\n        alt={breed}\n        src={imageURI}\n      ></img>\n    </figure>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Image, ErrorMsg, ADD_FAVORITE } from \"../state\";\nimport { Either } from \"fp-ts/lib/Either\";\nimport GalleryImage from \"./GalleryImage\";\nimport \"./Gallery.scss\";\nimport { AppContext } from \"../App\";\n\nconst onNone = null;\n\nconst onSome = (\n  s: Either<ErrorMsg, Array<Image>>\n) =>\n  s.fold(\n    msg => <h3 className=\"error\">{msg}</h3>,\n    images => {\n      const { dispatch } = useContext(AppContext)\n      return (\n        <ul>\n          {images.map(({ imageURI, breed, favorited }) => (\n            <li key={imageURI} onClick={_e => { dispatch({ type: ADD_FAVORITE, payload: imageURI }) }}>\n              <GalleryImage imageURI={imageURI} breed={breed} favorited={favorited} />\n            </li>\n          ))}\n        </ul>\n      )\n    }\n  );\n\nexport default function Gallery() {\n  const { images } = useContext(AppContext)\n  return (\n    <section className=\"gallery-container\">\n      {images.fold(onNone, onSome)}\n    </section>\n  );\n}\n","import React, { MouseEventHandler, useContext } from \"react\";\nimport {\n  FetchedBreeds,\n  Query,\n  Breed,\n  ErrorMsg,\n  SelectedBreed,\n  setSelectedBreed,\n  fetchImages,\n  FetchedImages,\n  setImages\n} from \"./../state\";\nimport { Either } from \"fp-ts/lib/Either\";\nimport { some } from \"fp-ts/lib/Option\";\nimport { toRegExp } from \"../lib\";\nimport \"./NavGrid.scss\";\nimport { AppContext } from \"../App\";\n\ntype HandleBreedSelect = (breed: Breed) => MouseEventHandler;\n\nexport interface NavGridProps {\n  breeds: FetchedBreeds;\n  query: Query;\n  handleSelect: HandleBreedSelect;\n  selectedBreed: SelectedBreed;\n}\n\nconst onLoading = <h2 className=\"loading\">Loading...</h2>;\n\nconst onSome =\n  (s: Either<ErrorMsg, Array<Breed>>) =>\n    s.fold(\n      msg => <h3 className=\"error\">{msg}</h3>,\n      breeds => {\n        const { dispatch, query, selectedBreed } = useContext(AppContext);\n        const filteredBreeds = breeds.filter(b => toRegExp(query).test(b))\n        const handleSelect = (breed: Breed): MouseEventHandler => _e => {\n          dispatch(setSelectedBreed(some(breed)));\n          fetchImages(breed).then((images: FetchedImages) => dispatch(setImages(images)));\n        };\n\n        return filteredBreeds.length ? (\n          <ul>\n            {filteredBreeds.slice(0, 12).map((breed: Breed) => {\n              const selected = breed === selectedBreed.getOrElse(\"\");\n              return (\n                <li key={breed}>\n                  <button\n                    type=\"button\"\n                    onClick={handleSelect(breed)}\n                    aria-pressed={selected}\n                    className={selected ? \"active\" : \"\"}\n                    id={breed}\n                  >\n                    {breed}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n            <h2 className=\"no-match\">No breed matches found.</h2>\n          )\n      }\n    );\n\nexport default function NavGrid(): JSX.Element {\n  const { breeds } = useContext(AppContext)\n  return (\n    <nav className=\"nav-container\">\n      {breeds.fold(onLoading, onSome)}\n    </nav>\n  );\n}\n","import escapeRegExp from \"lodash/escapeRegExp\";\n\nexport const toRegExp = (str: string): RegExp =>\n  new RegExp(escapeRegExp(str), \"gi\");\n","import React, { ChangeEventHandler, useContext } from \"react\";\nimport { setQuery } from \"../state\";\nimport \"./Search.scss\";\nimport { AppContext } from \"../App\";\n\n\nexport default function Search(): JSX.Element {\n  const { dispatch, query } = useContext(AppContext)\n  const onQueryChange: ChangeEventHandler<HTMLInputElement> = e => {\n    dispatch(setQuery(e.target.value));\n  };\n\n  return (\n    <span className=\"search-container\">\n      <input\n        aria-label=\"search\"\n        value={query}\n        onChange={onQueryChange}\n        className=\"search-input\"\n        type=\"text\"\n      />\n      {query.length === 0 && (\n        <span className=\"search-placeholder\">\n          <span role=\"img\" aria-label=\"detective\">\n            🕵️‍♀️\n          </span>{\" \"}\n          Search\n        </span>\n      )}\n    </span>\n  );\n}\n","import React, {\n  createContext,\n  useEffect,\n  useReducer,\n  FunctionComponent,\n  Dispatch\n} from \"react\";\nimport \"./App.scss\";\nimport Gallery from \"./components/Gallery\";\nimport NavGrid from \"./components/NavGrid\";\nimport Search from \"./components/Search\";\nimport {\n  fetchBreeds,\n  reducer,\n  initialState,\n  setBreeds,\n  FetchedBreeds,\n  AppState,\n  AppAction\n} from \"./state\";\n\nconst initialDispatch: Dispatch<AppAction> = (): void => { }\ninterface AppDispatch {\n  dispatch: Dispatch<AppAction>\n}\nexport const AppContext = createContext<AppState & AppDispatch>({ ...initialState, dispatch: initialDispatch })\n\nconst App: FunctionComponent = () => {\n  useEffect(() => {\n    fetchBreeds().then((breeds: FetchedBreeds) => dispatch(setBreeds(breeds)));\n  }, []);\n\n  const [state, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n\n  return (\n    <AppContext.Provider value={{ ...state, dispatch }}>\n      <div className=\"App\">\n        <div className=\"header-wrapper\">\n          <header className=\"container\">\n            <h1>Dogs!</h1>\n            <Search />\n          </header>\n        </div>\n        <main className=\"container\">\n          <NavGrid />\n          <Gallery />\n        </main>\n      </div>\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}